// Generated by Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if defined(__has_include) && __has_include(<uchar.h>)
# include <uchar.h>
#elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
#endif

typedef struct _NSZone NSZone;

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted) 
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
#endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

SWIFT_CLASS("_TtC15RealmConvertKit12DataExporter")
@interface DataExporter : NSObject
@property (nonatomic, copy) NSString * __nonnull outputFolderPath;
@property (nonatomic, copy) NSString * __nonnull realmFilePath;

/// Create a new instance of the exporter object
///
/// \param realmFilePath An absolute path to the Realm file to be exported
///
/// \param outputFolderpath An absolute path to a folder where the transformed files will be saved
- (nonnull instancetype)initWithRealmFileAtPath:(NSString * __nonnull)realmFilePath outputToFolderAtPath:(NSString * __nonnull)outputFolderPath OBJC_DESIGNATED_INITIALIZER;

/// Exports all of the contents of the provided Realm file to the designated output folder.\Warning 
///
/// This method must be overridden by a subclass, that does <em>not</em> call <code>super
/// </code>
- (BOOL)exportWithError:(NSError * __nullable * __null_unspecified)error;
@end



/// Provided a Realm file and an output destination folder, CSVDataExporter can export the contents of a Realm file to a series of CSV files.
///
/// A single CSV file is created for each table in the Realm file,
/// with strings being escaped in the default CSV standard.\Warning 
///
/// Presently, relationships between Realm objects are
/// not captured in the CSV files.
SWIFT_CLASS_NAMED("CSVDataExporter")
@interface RLMCSVDataExporter : DataExporter

/// The delimiter symbol used to separate each property on each row. Defaults to the CSV standard ',' comma.
@property (nonatomic, copy) NSString * __nonnull delimiter;

/// When it's necessary to escape a Realm property on a CSV row, this is the escape symbol Defaults to the CSV standard '"' double-quotes.
@property (nonatomic, copy) NSString * __nonnull escapeQuotes;

/// Takes the provided Realm file and exports each table to a CSV file in the provided output folder.
- (BOOL)exportWithError:(NSError * __nullable * __null_unspecified)error;
- (nonnull instancetype)initWithRealmFileAtPath:(NSString * __nonnull)realmFilePath outputToFolderAtPath:(NSString * __nonnull)outputFolderPath OBJC_DESIGNATED_INITIALIZER;
@end

enum Encoding : NSUInteger;
@class RLMJSONSchema;
@class RLMRealm;

SWIFT_CLASS_NAMED("DataImporter")
@interface RLMDataImporter : NSObject
@property (nonatomic, readonly, copy) NSArray<NSString *> * __nonnull files;
@property (nonatomic, readonly, copy) NSString * __nonnull output;
@property (nonatomic, readonly) enum Encoding encoding;
- (nonnull instancetype)initWithFile:(NSString * __nonnull)file output:(NSString * __nonnull)output encoding:(enum Encoding)encoding;
- (nonnull instancetype)initWithFiles:(NSArray<NSString *> * __nonnull)files output:(NSString * __nonnull)output encoding:(enum Encoding)encoding OBJC_DESIGNATED_INITIALIZER;
- (RLMRealm * __nullable)createNewRealmFileWithSchema:(RLMJSONSchema * __nonnull)schema error:(NSError * __nullable * __null_unspecified)error;
@end


SWIFT_CLASS_NAMED("CSVDataImporter")
@interface RLMCSVDataImporter : RLMDataImporter
- (RLMRealm * __nullable)importWithSchema:(RLMJSONSchema * __nonnull)schema error:(NSError * __nullable * __null_unspecified)error;
- (nonnull instancetype)initWithFiles:(NSArray<NSString *> * __nonnull)files output:(NSString * __nonnull)output encoding:(enum Encoding)encoding OBJC_DESIGNATED_INITIALIZER;
@end



typedef SWIFT_ENUM(NSUInteger, Encoding) {
  EncodingUTF8 = 0,
};


SWIFT_CLASS_NAMED("JSONObjectSchema")
@interface RLMJSONObjectSchema : NSObject
@property (nonatomic, copy) NSString * __nonnull objectClassName;
@end


@interface RLMJSONObjectSchema (SWIFT_EXTENSION(RealmConvertKit))
@property (nonatomic, readonly, copy) NSString * __nonnull description;
@property (nonatomic, readonly, copy) NSString * __nonnull debugDescription;
@end


SWIFT_CLASS_NAMED("JSONSchema")
@interface RLMJSONSchema : NSObject
@end


@interface RLMJSONSchema (SWIFT_EXTENSION(RealmConvertKit))
@property (nonatomic, readonly, copy) NSString * __nonnull description;
@property (nonatomic, readonly, copy) NSString * __nonnull debugDescription;
@end


SWIFT_CLASS_NAMED("XLSXDataImporter")
@interface RLMXLSXDataImporter : RLMDataImporter
- (RLMRealm * __nullable)importWithSchema:(RLMJSONSchema * __nonnull)schema error:(NSError * __nullable * __null_unspecified)error;
- (nonnull instancetype)initWithFiles:(NSArray<NSString *> * __nonnull)files output:(NSString * __nonnull)output encoding:(enum Encoding)encoding OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
